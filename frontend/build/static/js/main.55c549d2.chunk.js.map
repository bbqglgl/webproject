{"version":3,"sources":["reducers/auth.js","reducers/index.js","components/Header.js","components/Board/List.js","components/Board/ListFooter.js","lib/request.js","components/My/MyList.js","components/My/Main.js","actions/auth.js","pages/My.js","pages/Board.js","components/Board/Create.js","pages/CreateTip.js","components/Board/ViewCard.js","pages/View.js","components/Map/List.js","pages/Home.js","components/Auth/LoginForm.js","pages/Login.js","components/Auth/JoinForm.js","pages/Join.js","components/My/ChangePassword.js","App.js","reportWebVitals.js","index.js"],"names":["auth","state","isLogin","email","_id","action","type","enail","combineReducers","Headers","props","toggleNavbar","bind","collapsed","this","setState","Navbar","className","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","withRouter","List","tips","data","element","i","Card","Body","title","Badge","variant","good","map","l","renderList","nextProps","prevState","ListFooter","totalPages","currentPage","page","start","end","items","push","Pagination","First","changePage","number","Item","active","Last","getPagination","Button","axios","defaults","withCredentials","instance","create","baseURL","getBoardByTitle","a","get","result","getMyList","getView","id","catch","error","response","status","alert","err","console","log","getTipsByGeo","location","zoomLevel","y","x","list","getMarkerByGeo","mapRef","window","naver","maps","out","loc","Marker","position","LatLng","CreateTip","content","media","formData","FormData","ii","length","append","file","lat","lng","post","ChangePassword","oldP","newP","Login","password","Logout","join","MyList","searchText","getData","text","request","chagnePage","t","local_logout","history","ListGroup","logout","connect","dispatch","My","Main","Board","form","createRef","current","value","InputGroup","FormControl","placeholder","ref","Append","Search","Create","handleClose","$","attr","handleOpen","setTimeout","dispatchEvent","Event","mediaChangeHandler","e","preventDefault","reader","FileReader","target","files","onloadend","imagePreviewUrl","readAsDataURL","React","modal","show","selectedLocation","mapElement","mapDivId","style","width","height","defaultCenter","defaultZoom","naverRef","alt","src","margin","padding","top","getCenter","goBack","index","confirm","mediaDeleteByIndex","temp","m","splice","as","class","multiple","onChange","for","horizontal","img","Image","alertDeleteMedia","Modal","size","onHide","Header","closeButton","Title","Footer","selectLocation","submit","cancel","onSubmit","createNewTip","ViewCard","handleMapClose","show_map","handleMapOpen","handlePicClose","show_pic","handlePicOpen","path","show_pic_path","tip","Text","coordinates","disabled","tipRender","match","params","Home","markers","htmlMarker1","Size","anchor","Point","MarkerClustering","minClusterSize","maxZoom","disableClickZoom","gridSize","icons","indexGenerator","averageCenter","stylingFunction","clusterMarker","count","getElement","find","showTipsList","setMarkers","_redraw","once","customControl","CustomControl","Position","TOP_LEFT","setMap","addDOMListener","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","setCenter","enableHighAccuracy","maximumAge","timeout","addListener","dragHandler","getZoom","showTipsInMap","LoginForm","ErrorText","undefined","Alert","msg","local_login","Form","Group","controlId","Label","Control","Check","label","JoinForm","checkConfirmPassword","passwordMsg","canJoin","passwordAlert","Join","newPassword","oldPassword","App","exact","component","View","logined","needLogin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","store","createStore","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.55c549d2.chunk.js","sourcesContent":["\nconst auth = (state = [{isLogin:false,email:\"\",_id:-1}], action) => {\n    switch (action.type) {\n        case 'auth/LOGIN':\n            return [\n                {\n                    isLogin:true,\n                    email: action.enail,\n                    _id: action._id\n                }\n            ]\n        case 'auth/LOGOUT':\n            return [{isLogin:false,email:\"\",_id:-1}];\n        default:\n            return state;\n    }\n}\n\nexport default auth\n","import { combineReducers } from 'redux';\nimport auth from './auth';\n// Merge multiple reducers in single reducer object (root reducer)\nexport default combineReducers({auth});","import React, { Component } from 'react';\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass Headers extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleNavbar = this.toggleNavbar.bind(this);\n        this.state = {\n            collapsed: true\n        };\n    }\n\n    toggleNavbar() {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    }\n\n    render() {\n            return (\n                <header>\n                    <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\n                        <Container>\n                            <NavbarBrand tag={Link} to=\"/\">TipMap</NavbarBrand>\n                            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n                            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\n                                <ul className=\"navbar-nav flex-grow\">\n                                    <NavItem>\n                                        <NavLink tag={Link} className=\"text-dark\" to=\"/\">Map</NavLink>\n                                    </NavItem>\n                                    <NavItem>\n                                        <NavLink tag={Link} className=\"text-dark\" to=\"/Board\">List</NavLink>\n                                    </NavItem>\n                                    <NavItem>\n                                        <NavLink tag={Link} className=\"text-dark\" to=\"/My\">My</NavLink>\n                                    </NavItem>\n                                </ul>\n                            </Collapse>\n                        </Container>\n                    </Navbar>\n                </header>\n            );\n    }\n}\n\nexport default withRouter(Headers);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Badge, Card } from 'react-bootstrap';\n\nclass List extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tips: []\n        };\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        return {\n         tips:nextProps.data\n        };\n       }\n    componentDidMount() {\n        this.setState({ tips: this.props.data });\n    }\n    renderList(element, i) {\n        return (\n            <Link key={i} to={\"/View/\" + element._id}>\n                <Card>\n                    <Card.Body>{element.title}<Badge variant=\"dark\">{element.good}👍</Badge></Card.Body>\n                </Card>\n            </Link>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                <Container>\n                    {this.state.tips.map((l,i) => this.renderList(l, i))}\n                </Container>\n            </>\n        );\n    }\n}\n\nexport default List;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Button, Pagination } from 'react-bootstrap';\n\nclass ListFooter extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            totalPages: this.props.totalPages,\n            currentPage: this.props.currentPage\n        }\n    }\n\n    getPagination(page)\n    {\n        let start = page - 2;\n        let end = page + 2;\n        let items = [];\n        if(start < 1)\n        {\n            end += (1-start);\n            start = 1;\n        }\n        else if(end >= this.props.totalPages)\n        {\n            start += (this.props.totalPages - end);\n            end = this.props.totalPages;\n            if(start < 1)\n                start = 1;\n        }\n        if(start > 1)\n        {\n            items.push(\n                <Pagination.First onClick={() => this.props.changePage(1)} />,\n            );\n        }\n        if(end > this.props.totalPages)\n            end = this.props.totalPages;\n\n        for (let number = start; number <= end; number++) {\n            items.push(\n                <Pagination.Item key={number} active={number === page} onClick={() => this.props.changePage(number)}>\n                    {number}\n                </Pagination.Item>,\n            );\n        }\n        if (end < this.props.totalPages)\n        {\n            items.push(\n                <Pagination.Last onClick={() => this.props.changePage(this.props.totalPages)} />,\n            );\n        }\n        return items;\n    }\n\n    render() {\n        return (\n            <>\n                <Container>\n                    <Pagination>\n                        {this.getPagination(this.props.currentPage)}\n                    <Link to=\"/Board/Create\">\n                        <Button variant=\"primary\">\n                            글 쓰기\n                        </Button>\n                    </Link>\n                    </Pagination>\n                </Container>\n            </>\n        );\n    }\n}\n\nexport default ListFooter;","import axios from 'axios';\n\n//Backend는 3001port에서 동작중이므로 주소를 설정한다.\nconst API_DEFAULT = \"http://localhost:3001/\";\naxios.defaults.withCredentials = true;\nconst instance = axios.create({ baseURL: API_DEFAULT });\n\n//GET을 통해 review 정보들을 읽어온다.\nexport async function getBoard(page) {\n    //const result = await instance.get('/Board/'+page);\n    return await getBoard(\"\",page);\n}\nexport async function getBoardByTitle(title, page) {\n    const result = await instance.get('/api/board?title='+title+'&page='+page);\n    return result;\n}\nexport async function getMyList(page) {\n    const result = await instance.get('/api/board/My?page='+page);\n    return result.data;\n    \n}\n//GET을 통해 review 정보들을 읽어온다.\nexport async function getView(id) {\n    const result = await instance.get('/api/board/view?id='+id)\n    .catch(function (error) {\n        if(error.response.status !== 200)\n            alert(error.data.err);\n    });\n    console.log(result.data);\n    return result.data;\n}\nexport async function getTipsByGeo(location, zoomLevel)\n{\n    const result = await instance.get('/api/board/geoList?zoom='+zoomLevel+'&lat='+location.y+'&lng='+location.x);\n    //return { list:[{_id:0,title:\"Test1\", good:5},{_id:1,title:\"Test2\", good:2}], totalPages:20 };\n\n    return result.data.list;\n}\nexport async function getMarkerByGeo(location, zoomLevel)\n{\n    let result = await instance.get('/api/board/geoMarker?zoom='+zoomLevel+'&lat='+location.y+'&lng='+location.x);\n    let mapRef = window.naver.maps;\n    let data = result.data;\n    let out = [];\n    data.map(loc=>out.push(new mapRef.Marker({position:new mapRef.LatLng(loc[1], loc[0])})));\n    //let data = [{position:new mapRef.LatLng(37.3595704, 127.105399)},{position:new mapRef.LatLng(37.3595700, 127.105399)},{position:new mapRef.LatLng(37.3595704, 127.105390)},{position:new mapRef.LatLng(37.3590704, 127.105399)}];\n    //data.map((element, i) => (out.push(new mapRef.Marker(element))));\n    return out;\n}\n\nexport async function CreateTip(title, content, media, location)\n{\n    const formData = new FormData();\n    for(let i=0,ii=media.length; i<ii;i++)\n        formData.append(\"media\",media[i].file);\n\n    formData.append(\"title\",title);\n    formData.append(\"content\",content);\n    if(location === null)\n    {\n        formData.append(\"loc_lat\",0);\n        formData.append(\"loc_lng\",0);\n    }\n    else\n    {\n        formData.append(\"loc_lat\",location.lat);\n        formData.append(\"loc_lng\",location.lng);\n    }\n    let result = await instance.post('/api/board/create', formData)\n    .catch(function (error) {\n        if(error.response.status === 500)\n            result = \"확인되지 않은 문제. 관리자에게 문의하세요.\";\n    });\n    return result;\n}\n\nexport async function ChangePassword(oldP, newP)\n{\n    let out=null;\n    let result = await instance.post('/auth/changePW', {oldP, newP})\n    .catch(function (error) {\n        console.log(error);\n        if (error.response.status === 401)\n        out = \"입력한 현재 비밀번호가 다릅니다.\";\n        else if(error.response.status === 500)\n        out = \"확인되지 않은 문제. 관리자에게 문의하세요.\";\n    });\n    if(out) return out;\n    return result;\n}\nexport async function Login(email, password)\n{\n    let out=null;\n    let result = await instance.post('/auth/login', {email, password})\n    .catch(function (error) {\n        if (error.response.status === 401)\n            out = \"이메일 또는 비밀번호가 다릅니다.\";\n        else if(error.response.status === 500)\n            out = \"확인되지 않은 문제. 관리자에게 문의하세요.\";\n    });\n    if(out) return out;\n    return result;\n}\nexport async function Logout()\n{\n    let out = null;\n    await instance.get('/auth/logout')\n    .catch(function (error) {\n        if(error.response.status === 500)\n            out = \"확인되지 않은 문제. 관리자에게 문의하세요.\";\n    });\n    return out;\n}\n\nexport async function join(email, password)\n{\n    let out = null;\n    await instance.post('/auth/join', {email, password})\n    .catch(function (error) {\n        if (error.response.status === 401)\n            out = \"이메일 또는 비밀번호가 다릅니다.\";\n        else if(error.response.status === 500)\n            out = \"확인되지 않은 문제. 관리자에게 문의하세요.\";\n    });\n    return out;\n}\n\n//POST를 통해 새로운 review를 전달한다.\nexport async function createReview(movie_name, review_content, rate) {\n    await instance.post('/', {movie_name, review_content, rate});\n}\n\n//DELETE를 통해 삭제할 id를 전달한다.\nexport async function deleteReview(id) {\n    await instance.delete(String(id));\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport List from '../Board/List';\nimport ListFooter from '../Board/ListFooter';\nimport * as request from '../../lib/request';\n\nclass MyList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            searchText:\"\",\n            currentPage: 1,\n            totalPages: 0\n        };\n    }\n    async componentDidMount() {\n        const result = await this.getData(\"\",1);\n        this.setState({ list: result.list, totalPages: result.totalPages });\n    }\n    async Search(text)\n    {\n        const result = await this.getData(text,1);\n        this.setState({list : result.list, searchText : text, currentPage: 1, totalPages: result.totalPages});\n    }\n    async chagnePage(page)\n    {\n        const result = await this.getData(this.state.searchText,page);\n        this.setState({list : result.list, currentPage: page, totalPages: result.totalPages});\n    }\n    async getData(text, page)\n    {\n        return await request.getMyList(page);\n    }\n\n    render() {\n        return (\n            <Container>\n                <List data={this.state.list} />\n                <ListFooter totalPages={this.state.totalPages} currentPage={this.state.currentPage} changePage={this.chagnePage.bind(this)} />\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(MyList);","//내가쓴글\n//비밀번호 변경\n//로그아웃\n\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Container,ListGroup } from 'react-bootstrap';\nimport * as request from '../../lib/request';\nimport { connect } from 'react-redux';\nimport { local_logout } from '../../actions/auth';\n\nclass MyList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            searchText: \"\",\n            currentPage: 1,\n            totalPages: 0\n        };\n    }\n    async componentDidMount() {\n        const result = await this.getData(\"\", 1);\n        this.setState({ list: result.list, totalPages: result.totalPages });\n    }\n    async Search(text) {\n        const result = await this.getData(text, 1);\n        this.setState({ list: result.list, searchText: text, currentPage: 1, totalPages: result.totalPages });\n    }\n    async chagnePage(page) {\n        const result = await this.getData(this.state.searchText, page);\n        this.setState({ list: result.list, currentPage: page, totalPages: result.totalPages });\n    }\n    async getData(text, page) {\n        return await request.getMyList(page);\n    }\n\n    async logout()\n    {\n        if(this.props.auth[0].isLogin)\n        {\n            let t = await request.Logout();\n            if(t === null)\n            {\n                this.props.local_logout();\n                this.props.history.push(\"/\");\n            }\n            else\n                alert(t);\n        }\n    }\n    render() {\n        return (\n            <Container>\n                <ListGroup>\n                    <Link to=\"/My/List\">\n                    <ListGroup.Item action>\n                        내가 쓴 팁\n                    </ListGroup.Item>\n                    </Link>\n                    <Link to=\"/My/ChangePassword\">\n                    <ListGroup.Item action>\n                        비밀번호 변경\n                    </ListGroup.Item>\n                    </Link>\n                    <ListGroup.Item onClick={this.logout.bind(this)} action>\n                        로그아웃\n                    </ListGroup.Item>\n                </ListGroup>\n            </Container>\n        );\n    }\n}\nconst mapStateToProps = state => { return state; };\n\nconst mapDispatchToProps = dispatch => ({\n    local_logout: () => dispatch(local_logout()),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MyList));","export const local_login = (_id, email) => ({\n    type: \"auth/LOGIN\",\n    email,\n    _id\n});\n\nexport const local_logout = () => ({\n    type: \"auth/LOGOUT\",\n});","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Main from '../components/My/Main';\n\nclass My extends Component {\n    render() {\n        return (\n            <Container>\n                    <Main />\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(My);","import React, { Component, createRef } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container,InputGroup,FormControl, Button } from 'react-bootstrap';\nimport List from '../components/Board/List';\nimport ListFooter from '../components/Board/ListFooter';\nimport * as request from '../lib/request';\n\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n        this.form = {\n            searchText : createRef(),\n        }\n        this.state = {\n            list: [],\n            searchText:\"\",\n            currentPage: 1,\n            totalPages: 0\n        };\n    }\n    async componentDidMount() {\n        const result = await this.getData(\"\",1);\n        console.log(result);\n        this.setState({ list: result.list, totalPages: result.totalPages });\n    }\n    async Search()\n    {\n        let text = this.form.searchText.current.value;\n        const result = await this.getData(text,1);\n        this.setState({list : result.list, searchText : text, currentPage: 1, totalPages: result.totalPages});\n    }\n    async chagnePage(page)\n    {\n        const result = await this.getData(this.state.searchText,page);\n        this.setState({list : result.list, currentPage: page, totalPages: result.totalPages});\n    }\n    async getData(text, page)\n    {\n        return (await request.getBoardByTitle(text, page)).data;\n    }\n\n    render() {\n        return (\n            <Container>\n                <InputGroup className=\"mb-3\">\n                    <FormControl placeholder=\"검색할 제목을 입력하세요.\" ref={this.form.searchText} />\n                    <InputGroup.Append>\n                        <Button variant=\"outline-secondary\" onClick={this.Search.bind(this)}>검색</Button>\n                    </InputGroup.Append>\n                </InputGroup>\n                <List data={this.state.list} />\n                <ListFooter totalPages={this.state.totalPages} currentPage={this.state.currentPage} changePage={this.chagnePage.bind(this)} />\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(Board);","import React, { Component } from 'react';\nimport { InputGroup, FormControl, Button, Image, Modal, ListGroup } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { NaverMap } from 'react-naver-maps';\nimport $ from \"jquery\";\nimport * as request from '../../lib/request';\n\nclass Create extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.form = {\n            title: React.createRef(),\n            content: React.createRef(),\n            media: React.createRef(),\n            modal: React.createRef()\n        }\n        this.state = {\n            show : true,\n            media:[],\n            selectedLocation:null\n        }\n        this.mapElement = (\n            <NaverMap\n                mapDivId={'maps-getting-started-uncontrolled'}\n                style={{\n                    width: '100%',\n                    height: '700px',\n                }}\n                defaultCenter={{ lat:37.2830223, lng:127.0435122 }}\n                defaultZoom={15}\n                naverRef={ref => { this.mapRef = ref }}\n            >\n            <img alt=\"goodimage\" width=\"30px\" height=\"30px\" src=\"/marker.png\" style={{position: 'absolute', 'z-index': '100', margin: '-30px 0 0 -15px', padding: '0px', 'pointer-events': 'none', 'left': '50%', top: '50%'}}/>\n            </NaverMap>);\n    }\n    componentDidMount() {\n        this.handleClose();\n    }\n    handleClose = () => {\n        $(\".modal-backdrop\").attr('style', \"display:none;\");\n        $(\".modal\").attr('style', \"display: none; padding-left: 17px;\");\n    }\n    handleOpen = () => {\n        $(\".modal-backdrop\").attr('style', \"display:block;\");\n        $(\".modal\").attr('style', \"display: block; padding-left: 17px;\");\n        setTimeout( function() {window.dispatchEvent(new Event('resize'));}, 200);\n    }\n\n    selectLocation()\n    {\n        if(this.mapRef)\n        {\n            let result = this.mapRef.getCenter();\n            this.handleClose();\n            this.setState({selectedLocation:{ lat: result.y, lng: result.x }});\n        }\n        this.handleClose();\n    }\n\n    async submit() {\n        const title = this.form.title.current.value;\n        const content = this.form.content.current.value;\n        //const media = this.form.media.current.value;\n        //await this.props.onSubmit();\n        let result = await request.CreateTip(title,content,this.state.media,this.state.selectedLocation);\n        if(result.status !== 200)\n        {\n            alert(\"Error!\");\n            return;\n        }\n        this.props.history.push(\"/Board/\");\n    }\n\n    cancel() {\n        this.props.history.goBack();\n    }\n    mediaChangeHandler = (e)=>\n    {\n        e.preventDefault();\n\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        reader.onloadend = () => {\n          this.setState({ media : [...this.state.media ,{ file: file, imagePreviewUrl: reader.result }] });\n        };\n        reader.readAsDataURL(file);\n    }\n    alertDeleteMedia(index)\n    {\n        console.log(this.state.media);\n        if(window.confirm(\"삭제하시겠습니까??\") === true)\n        {\n            this.mediaDeleteByIndex(index);\n        }\n    }\n    mediaDeleteByIndex(index)\n    {\n\n        let temp = [];\n        this.state.media.map(m => temp.push(m));\n        temp.splice(index, 1);\n        this.setState({media : temp});\n    }\n    render() {\n        return (\n            <>\n                <InputGroup className=\"mb-3\">\n                    <FormControl\n                        placeholder=\"제목\"\n                        ref={this.form.title}\n                    />\n                </InputGroup>\n                <InputGroup className=\"mb-3\">\n                    <FormControl\n                        as=\"textarea\"\n                        placeholder=\"내용을 입력해주세요.\"\n                        ref={this.form.content}\n                    />\n                </InputGroup>\n\n                    <div class=\"custom-file\">\n                        <input id=\"inputGroupFile02\" type=\"file\" multiple class=\"custom-file-input\" onChange={this.mediaChangeHandler} />\n                        <label for=\"inputGroupFile02\">Choose several files</label>\n                    </div>\n                            <ListGroup horizontal>\n                {this.state.media.map((img, i) => {\n                    return(\n                    <>\n                                <ListGroup.Item style={{ width: '18rem' }}><Image src={img.imagePreviewUrl} style={{ width: '100%' }} onClick={() => this.alertDeleteMedia(i)} /></ListGroup.Item>\n                    </>);\n                })}\n                </ListGroup>\n                    <Modal id=\"CreateMapModal\" size=\"lg\" show={true} onHide={this.handleClose} ref={this.form.modal}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>위치 선택하기</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {this.mapElement}\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                            닫기\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.selectLocation.bind(this)}>\n                            위치 선택\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                <Button variant=\"primary\" type=\"submit\" onClick={this.handleOpen}>\n                    위치\n                </Button>\n                <Button variant=\"primary\" type=\"submit\" onClick={this.submit.bind(this)}>\n                    Submit\n                </Button>\n                <Button variant=\"danger\" type=\"submit\" onClick={this.cancel.bind(this)}>\n                    Cancel\n                </Button>\n            </>\n        );\n    }\n}\n\nexport default withRouter(Create);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Create from '../components/Board/Create';\n\nclass CreateTip extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title:\"\",\n            content:\"\",\n            media:[]\n        };\n    }\n\n    render() {\n        return (\n            <Container>\n                <Create onSubmit={this.createNewTip} />\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(CreateTip);","import React, { Component } from 'react';\nimport { Container, Card, ListGroup, Image, Modal, Button } from 'react-bootstrap';\nimport { NaverMap, Marker } from 'react-naver-maps';\n\n//본인이 쓴 글일경우 삭제 가능하게\nclass ViewCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = \n        {\n            tip:null,\n            show_pic_path: \"\",\n            show_pic : false,\n            show_map : false\n        };\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        return {\n         tip:nextProps.tip,\n        };\n       }\n    handleMapClose = () => {this.setState({show_map : false})}\n    handleMapOpen = () => {this.setState({show_map : true})}\n    handlePicClose = () => {this.setState({show_pic : false})}\n    handlePicOpen = (path) => {this.setState({show_pic : true, show_pic_path:path})}\n    tipRender()\n    {\n        if(this.state.tip === null)\n            return;\n        return(\n        <Card style={{ width: '100%' }}>\n            <Card.Body>\n                <Card.Title>{this.state.tip.title}</Card.Title>\n                <Card.Text>{this.state.tip.content}</Card.Text>\n            </Card.Body>\n            <ListGroup horizontal>\n                {this.state.tip.media.map((img, i) => {\n                    return(\n                    <>\n                        <ListGroup.Item style={{ width: '18rem' }}><Image src={'/images/'+img.path} onClick={() => this.handlePicOpen('/images/'+img.path)} style={{ width: '100%' }}  /></ListGroup.Item>\n                    </>);\n                })}\n                </ListGroup>\n                <Modal show={this.state.show_map} onHide={this.handleMapClose}>\n                    <Modal.Header closeButton>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <NaverMap\n                            mapDivId={'maps-getting-started-uncontrolledd'}\n                            style={{\n                                width: '100%',\n                                height: '700px',\n                            }}\n                            defaultCenter={{ lat: this.state.tip.location.coordinates[1], lng: this.state.tip.location.coordinates[0] }}\n                            defaultZoom={15}\n                            naverRef={ref => { this.mapRef = ref }}\n                        >\n                            <Marker\n                                position={new window.naver.maps.LatLng(this.state.tip.location.coordinates[1], this.state.tip.location.coordinates[0])}\n                            />\n                            {setTimeout( function() {window.dispatchEvent(new Event('resize'));}, 200)}\n                        </NaverMap>\n                    </Modal.Body>\n                </Modal>\n                <Modal show={this.state.show_pic} onHide={this.handlePicClose}>\n                    <Modal.Header closeButton>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Image width=\"100%\" src={this.state.show_pic_path} />\n                    </Modal.Body>\n                </Modal>\n                {this.state.tip.location.coordinates[1] === 0 ? <Button variant=\"primary\" type=\"submit\" disabled=\"true\">\n                    위치\n                </Button> :\n            <Button variant=\"primary\" type=\"submit\" onClick={this.handleMapOpen}>\n                    위치\n                </Button>}\n        </Card>\n        );\n    }\n    render() {\n        return (\n            <>\n                <Container>\n                    {this.tipRender()}\n                </Container>\n            </>\n        );\n    }\n}\n\nexport default ViewCard;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport ViewCard from '../components/Board/ViewCard';\nimport * as request from '../lib/request';\n\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data : null\n        };\n    }\n    async componentDidMount() {\n        const result = await request.getView(this.props.match.params.id);\n        this.setState({data:result});\n    }\n\n    render() {\n        return (\n            <Container>\n                {console.log(this.state.data)}\n                <ViewCard tip={this.state.data} />\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(Board);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Badge, Card } from 'react-bootstrap';\n\nclass List extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tips: []\n        };\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        return {\n         tips:nextProps.data\n        };\n       }\n    componentDidMount() {\n        this.setState({ tips: this.props.data });\n    }\n    renderList(element, i) {\n        return (\n            <Link key={i} to={\"/View/\" + element._id}>\n                <Card>\n                    <Card.Body>{element.title}<Badge variant=\"dark\">{element.good}👍</Badge></Card.Body>\n                </Card>\n            </Link>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                <Container>\n                    {console.log(this.state.tips)}\n                    {this.state.tips.map((l,i) => this.renderList(l, i))}\n                </Container>\n            </>\n        );\n    }\n}\n\nexport default List;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Modal } from 'react-bootstrap';\nimport { NaverMap } from 'react-naver-maps';\nimport List from '../components/Map/List';\nimport * as request from '../lib/request';\nimport $ from \"jquery\";\nvar gridSize = 130;\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data : [],\n            show : false\n        };\n    }\n    static t = null;\n    handleClose = () => this.setState({show:false});\n    handleOpen = () => this.setState({show:true});\n\n    render() {\n        return (\n            <Container>\n                <NaverMap\n                    mapDivId={'maps-getting-started-uncontrolled'} // default: react-naver-map\n                    style={{\n                        width: '100%',\n                        height: '600px',\n                    }}\n                    defaultCenter={{ lat:37.2830223, lng:127.0435122 }}\n                    defaultZoom={15}\n                    naverRef={ref => { this.mapRef = ref }}\n                >\n                </NaverMap>\n                <Modal show={this.state.show} onHide={this.handleClose} >\n                    <Modal.Header closeButton>\n                    </Modal.Header>\n                    <Modal.Body style={{ 'max-height': '700px', 'overflow-y': 'scroll' }}><List data = {this.state.data}/></Modal.Body>\n                </Modal>\n            </Container>\n        );\n    }\n\n    showTipsInMap(markers)\n    {\n        let mapRef = window.naver.maps;\n        let instance = this.mapRef.instance;\n        if(!markers)\n        {\n            markers = [];\n        }\n        var htmlMarker1 = {\n            content: '<div style=\"cursor:pointer;width:40px;height:40px;line-height:30px;font-size:12px;color:black;text-align:center;font-weight:bold;background:url(/marker.png);background-size:contain;\"></div>',\n            size: mapRef.Size(40, 40),\n            anchor: mapRef.Point(20, 20)\n        };\n\n        if(Home.t===null)\n        {\n            Home.t=new window.MarkerClustering({\n                minClusterSize: 1,\n                maxZoom: 22,\n                map: instance,\n                markers: markers,\n                disableClickZoom: false,\n                gridSize: gridSize,\n                icons: [htmlMarker1],\n                indexGenerator: [10],\n                averageCenter: true,\n                stylingFunction: function (clusterMarker, count) {\n                    $(clusterMarker.getElement()).find('div:first-child').text(count);\n                }\n            }, this.showTipsList.bind(this));\n        }\n        else\n        {\n            Home.t.setMarkers(markers);\n            Home.t._redraw();\n        }\n    }\n    async showTipsList(location, zoomLevel)\n    {\n        console.log(location);\n        console.log(zoomLevel);\n        this.handleOpen();\n        let result = await request.getTipsByGeo(location, zoomLevel);\n        this.setState({data:result});\n    }\n    componentWillUnmount()\n    {\n        Home.t=null;\n    }\n    async componentDidMount() {\n        \n        let mapRef = window.naver.maps;\n        let instance = this.mapRef.instance;\n        var locationBtnHtml = '<a href=\"#\" class=\"btn_mylct\"><img width=\"30px\" height=\"30px\" src=\"./gps.png\"></a>';\n\n        mapRef.Event.once(instance, 'init_stylemap', function () {\n            //customControl 객체 이용하기\n            var customControl = new mapRef.CustomControl(locationBtnHtml, {\n                position: mapRef.Position.TOP_LEFT\n            });\n            customControl.setMap(instance);\n            mapRef.Event.addDOMListener(customControl.getElement(), 'click', function () {\n                var options = {\n                    // 가능한 경우, 높은 정확도의 위치(예를 들어, GPS 등) 를 읽어오려면 true로 설정\n                    // 그러나 이 기능은 배터리 지속 시간에 영향을 미친다. \n                    enableHighAccuracy: false, // 대략적인 값이라도 상관 없음: 기본값\n                    \n                    // 위치 정보가 충분히 캐시되었으면, 이 프로퍼티를 설정하자, \n                    // 위치 정보를 강제로 재확인하기 위해 사용하기도 하는 이 값의 기본 값은 0이다.\n                    maximumAge: 15000,     // 5분이 지나기 전까지는 수정되지 않아도 됨\n                    \n                    // 위치 정보를 받기 위해 얼마나 오랫동안 대기할 것인가?\n                    // 기본값은 Infinity이므로 getCurrentPosition()은 무한정 대기한다.\n                    timeout: 15000    // 15초 이상 기다리지 않는다.\n                }\n                navigator.geolocation.getCurrentPosition(function (pos) {\n                    let lat, lng;\n                    lat = pos.coords.latitude;\n                    lng = pos.coords.longitude;\n                    \n                    instance.setCenter(new mapRef.LatLng(lat, lng));\n                }, (e)=>{console.log(e)}, options)\n            });\n        });\n        \n        mapRef.Event.addListener(instance, 'dragend', ()=>this.dragHandler(instance));\n        //this.setMyCurrentLocation();\n        let result = await request.getMarkerByGeo(instance.getCenter(), instance.getZoom());\n        this.showTipsInMap(result);\n    }\n    async dragHandler(instance)\n    {\n        let result = await request.getMarkerByGeo(instance.getCenter(), instance.getZoom());\n        this.showTipsInMap(result);\n    }\n    setMyCurrentLocation () {\n        let mapRef = window.naver.maps;\n        let instance = this.mapRef.instance;\n        var options = {\n            // 가능한 경우, 높은 정확도의 위치(예를 들어, GPS 등) 를 읽어오려면 true로 설정\n            // 그러나 이 기능은 배터리 지속 시간에 영향을 미친다. \n            enableHighAccuracy: false, // 대략적인 값이라도 상관 없음: 기본값\n            \n            // 위치 정보가 충분히 캐시되었으면, 이 프로퍼티를 설정하자, \n            // 위치 정보를 강제로 재확인하기 위해 사용하기도 하는 이 값의 기본 값은 0이다.\n            maximumAge: 15000,     // 5분이 지나기 전까지는 수정되지 않아도 됨\n            \n            // 위치 정보를 받기 위해 얼마나 오랫동안 대기할 것인가?\n            // 기본값은 Infinity이므로 getCurrentPosition()은 무한정 대기한다.\n            timeout: 15000    // 15초 이상 기다리지 않는다.\n        }\n        navigator.geolocation.getCurrentPosition(function (pos) {\n            let lat, lng;\n            lat = pos.coords.latitude;\n            lng = pos.coords.longitude;\n            \n            instance.setCenter(new mapRef.LatLng(lat, lng));\n        }, (e)=>{console.log(e)}, options)\n    }\n}\n\nexport default withRouter(Home);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { local_login } from '../../actions/auth';\nimport * as request from '../../lib/request';\n\nclass LoginForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ErrorText: ''\n        }\n        this.form = {\n            email: React.createRef(),\n            password: React.createRef()\n        }\n    }\n    ErrorText(text) {\n        if (text === null || text === undefined || text.length === 0)\n            return;\n        return (\n            <Alert variant=\"danger\">\n                {text}\n            </Alert>\n        );\n    }\n    async submit(e) {\n        e.preventDefault();\n        const email = this.form.email.current.value;\n        const password = this.form.password.current.value;\n        let msg = await request.Login(email, password);\n\n        if(typeof(msg) !== \"string\")\n        {\n            this.props.local_login(msg.data._id, msg.data.email);\n            console.log(this.props);\n            this.props.history.push(\"/\");\n        }\n        else\n            alert(msg);\n    }\n    join()\n    {\n        this.props.history.push(\"/Auth/Join\");\n    }\n    render() {\n        return (\n            <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" ref={this.form.email} />\n                    <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                        </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" ref={this.form.password} />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group>\n                {this.ErrorText(this.state.ErrorText)}\n                <Button variant=\"primary\" onClick={this.submit.bind(this)}>\n                    로그인\n                    </Button>\n                <Button variant=\"primary\" onClick={this.join.bind(this)}>\n                    가입하기\n                    </Button>\n            </Form>\n        );\n    }\n}\nconst mapStateToProps = state => { return state; };\n\nconst mapDispatchToProps = dispatch => ({\n    local_login: (_id, email) => dispatch(local_login(_id, email)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginForm));","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport LoginForm from '../components/Auth/LoginForm';\n\nclass Login extends Component {\n    render() {\n        return (\n            <Container>\n                    <LoginForm />\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(Login);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport * as request from '../../lib/request';\n\nclass JoinForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ErrorText: '',\n            passwordMsg: '',\n            canJoin:false\n        }\n        this.form = {\n            email: React.createRef(),\n            password: React.createRef(),\n            passwordAlert: React.createRef()\n        }\n    }\n    ErrorText(text) {\n        if (text === null || text === undefined || text.length === 0)\n            return;\n        return (\n            <Alert variant=\"danger\">\n                {text}\n            </Alert>\n        );\n    }\n    checkConfirmPassword = (e) =>\n    {\n        if(e.target.value.length === 0)\n            return;\n        if(this.form.password.current.value !== e.target.value)\n        {\n            this.setState({passwordMsg : \"비밀번호가 다릅니다. 확인해주세요.\", canJoin:false});\n            return;\n        }\n        this.setState({passwordMsg : \"\", canJoin:true});\n        return;\n    }\n    async submit(e) {\n        e.preventDefault();\n        const email = this.form.email.current.value;\n        const password = this.form.password.current.value;\n        let msg = await request.join(email, password);\n        \n        if(msg === null)\n            this.props.history.push(\"/\");\n        else\n            alert(msg);\n    }\n    render() {\n        return (\n            <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" ref={this.form.email} />\n                    <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                        </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" ref={this.form.password} />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.checkConfirmPassword}/>\n                    <Form.Text className=\"text-muted\">\n                        {this.state.passwordMsg}\n                    </Form.Text>\n                </Form.Group>\n                {this.ErrorText(this.state.ErrorText)}\n                <Button variant=\"primary\" onClick={this.submit.bind(this)} disabled={!this.state.canJoin}>\n                    Join\n                    </Button>\n            </Form>\n        );\n    }\n}\nexport default withRouter(JoinForm);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport JoinForm from '../components/Auth/JoinForm';\n\nclass Join extends Component {\n    render() {\n        return (\n            <Container>\n                <JoinForm />\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(Join);","import React, { Component } from 'react';\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\nimport * as request from '../../lib/request';\n\nclass ChangePassword extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ErrorText: '',\n            passwordMsg: ''\n        }\n        this.form = {\n            oldPassword: React.createRef(),\n            newPassword: React.createRef(),\n            passwordAlert: React.createRef()\n        }\n    }\n    ErrorText(text) {\n        if (text === null || text === undefined || text.length === 0)\n            return;\n        return (\n            <Alert variant=\"danger\">\n                {text}\n            </Alert>\n        );\n    }\n    checkConfirmPassword = (e) =>\n    {\n        if(e.target.value.length === 0)\n            return;\n        if(this.form.newPassword.current.value !== e.target.value)\n        {\n            this.setState({passwordMsg : \"비밀번호가 다릅니다. 확인해주세요.\"});\n            return;\n        }\n        this.setState({passwordMsg : \"\"});\n        return;\n    }\n    async submit(e) {\n        e.preventDefault();\n        const oldP = this.form.oldPassword.current.value;\n        const newP = this.form.newPassword.current.value;\n        let msg = await request.ChangePassword(oldP, newP);\n\n        if(typeof(msg) !== \"string\")\n        {\n            alert(\"비밀번호가 변경되었습니다.\")\n            this.props.history.push(\"/\");\n        }\n        else\n            alert(msg);\n    }\n    render() {\n        return (\n            <Container>\n            <Form>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>현재 비밀번호</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" ref={this.form.oldPassword} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>새 비밀번호</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" ref={this.form.newPassword} />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>새 비밀번호 확인</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.checkConfirmPassword.bind(this)}/>\n                    <Form.Text className=\"text-muted\">\n                        {this.state.passwordMsg}\n                    </Form.Text>\n                </Form.Group>\n                {this.ErrorText(this.state.ErrorText)}\n                <Button variant=\"primary\" onClick={this.submit.bind(this)}>\n                    비밀번호 변경\n                    </Button>\n            </Form>\n            </Container>\n        );\n    }\n}\nexport default ChangePassword;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport MyList from './components/My/MyList';\nimport My from './pages/My';\nimport Board from './pages/Board';\nimport CreateTip from './pages/CreateTip';\nimport View from './pages/View';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Join from './pages/Join';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ChangePassword from './components/My/ChangePassword';\nimport { connect } from 'react-redux';\n\n\nexport class App extends React.Component {\n    logined()\n    {\n      return(\n      <>\n      <Header />\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/Board\" component={Board} />\n            <Route exact path=\"/Board/Create\" component={CreateTip} />\n            <Route exact path=\"/View/:id\" component={View} />\n            <Route exact path=\"/My\" component={My} />\n            <Route exact path=\"/My/List\" component={MyList} />\n            <Route exact path=\"/My/ChangePassword\" component={ChangePassword} />\n            <Route exact path=\"/Auth/Login\" component={Login} />\n            <Route exact path=\"/Auth/Join\" component={Join} />\n        </Switch>\n        </>);\n    }\n    needLogin()\n    {\n      return(\n      <>\n        <Switch>\n            <Route path=\"/\" component={Login} />\n            <Route exact path=\"/Auth/Join\" component={Join} />\n        </Switch>\n        </>);\n    }\n    render() {\n      return (\n        <>\n          <Router>\n            {this.props.auth[0].isLogin ? this.logined() : this.needLogin()}\n          </Router>\n        </>\n        );\n    }\n}\n\nconst mapStateToProps = state => { return state; };\n\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux'\nimport reducers from './reducers';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Provider store={createStore(reducers)}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}